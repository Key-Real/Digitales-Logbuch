name: Deploy Frontend to Production
on: 
  push:
    branches:
    - main
    paths:
    - digi_log_fe/**
    - .github/workflows/prod-deploy-frontend.yml
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CONTAINER_NAME: digitales-logbuch_fe
  DOCKERFILE_PATH: digi_log_fe
  REGISTRY_PATH: ghcr.io/${{ github.repository_owner }}/digitales-logbuch_fe
jobs: 
  build: 
    # runs-on: [ubuntu-latest,build,self-hosted]
    runs-on: [self-hosted]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY_PATH }}

        # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{env.DOCKERFILE_PATH}}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BACKEND_IP=${{ vars.BACKEND_IP}}
            BACKEND_PORT=${{ vars.BACKEND_PORT }}
        
      - name: Docker Login
        run: docker login -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - name: Docker pull
        run: docker pull ${{ env.REGISTRY_PATH }}:${{ github.ref_name }}
        
      - name: Docker stop
        run: docker stop ${{ env.CONTAINER_NAME }} || echo "no containers found, none stopped"   
      - name: Docker rm
        run: docker rm ${{ env.CONTAINER_NAME }} || echo "no containers found, none removed"
      - name: Docker run
        run: docker run -d -p 80:80
          --restart=always
          --name ${{ env.CONTAINER_NAME }} ${{ env.REGISTRY_PATH }}:${{ github.ref_name }} 
