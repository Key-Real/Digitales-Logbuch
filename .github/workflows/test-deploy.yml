name: Deploy to Test
on:
  pull_request:
    types: [opened, edited, synchronize]
    paths:
      - myproject/**
      - .github/test-deploy.yml
  workflow_dispatch:
concurrency:
  group: general-build-${{ github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: development
  CONTAINER_NAME: mealplan_dev

jobs: 
  build: 
    # runs-on: [ubuntu-latest,build,self-hosted]
    runs-on: [self-hosted]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

        # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: build vars
        run: echo "${{ steps.meta.outputs.tags }}"| echo "${{ steps.meta.outputs.labels }}"| echo "${{ env }}" | echo "version ${{ steps.meta.outputs.version }}" | echo "version ${{ github.ref_name }}"
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.dev
        
      - name: Docker Login
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - name: Docker pull
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
        
      - name: Docker stop
        run: docker stop ${{ env.CONTAINER_NAME }} || echo "no containers found, none stopped"   
      - name: Docker rm
        run: docker rm ${{ env.CONTAINER_NAME }} || echo "no containers found, none removed"
      - name: Docker run
        run: docker run -d -p 8080:8000 \
          -e DJANGO_SUPERUSER_PASSWORD=123456x \
          -e DJANGO_SUPERUSER_EMAIL=admin@admin.org \
          -e DJANGO_SUPERUSER_USERNAME=admin_hwi \
          -e MEALPLAN_DB_NAME=hwi_db \
          -e MEALPLAN_DB_USER=hwi_db_user \
          -e MEALPLAN_DB_PASSWORD=test \
          -e MEALPLAN_DB_HOST=192.168.100.242 \
          -e MEALPLAN_DB_PORT=3306 \
          --restart=always --name ${{ env.CONTAINER_NAME }} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} 